@model GadgetHub.Domain.Entities.Product

@{
    var isNew = Model?.Id == 0;
    ViewBag.Title = isNew ? "Admin: Add" : "Admin: Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>@(isNew ? "Add New Product" : $"Edit: {Model.Name}")</h2>

@using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)

    <div class="mb-3">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, 5, 40, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(m => m.Price)
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(m => m.CategoryId, "Category")
        @Html.DropDownListFor(
            m => m.CategoryId,
            (IEnumerable<SelectListItem>)ViewBag.Categories,
            "Selectâ€¦",
            new { @class = "form-select" })
        @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-success">ðŸ’¾Â Save</button>
    <a class="btn btn-secondary" asp-action="Index">Cancel</a>
}